{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 15, "column": 0}, "map": {"version":3,"sources":["file:///Users/mdreesen/Documents/Programming/projects/goals-io/lib/mongodb.ts"],"sourcesContent":["import mongoose from \"mongoose\";\nconst { MONGO_URI } = process.env;\nexport const connectDB = async () => {\n  try {\n    const { connection } = await mongoose.connect(MONGO_URI as string);\n    if (connection.readyState === 1) {\n      return Promise.resolve(true);\n    }\n  } catch (error) {\n    console.error(error);\n    return Promise.reject(error);\n  }\n};"],"names":[],"mappings":";;;AAAA;;AACA,MAAM,EAAE,SAAS,EAAE,GAAG,QAAQ,GAAG;AAC1B,MAAM,YAAY;IACvB,IAAI;QACF,MAAM,EAAE,UAAU,EAAE,GAAG,MAAM,yGAAA,CAAA,UAAQ,CAAC,OAAO,CAAC;QAC9C,IAAI,WAAW,UAAU,KAAK,GAAG;YAC/B,OAAO,QAAQ,OAAO,CAAC;QACzB;IACF,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC;QACd,OAAO,QAAQ,MAAM,CAAC;IACxB;AACF"}},
    {"offset": {"line": 32, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 38, "column": 0}, "map": {"version":3,"sources":["file:///Users/mdreesen/Documents/Programming/projects/goals-io/%28models%29/User.ts"],"sourcesContent":["import mongoose, { Schema } from \"mongoose\";\n\nmongoose.connect(`${process.env.MONGO_URI}`);\nmongoose.Promise = global.Promise;\n\nconst userSchema = new Schema(\n    {\n        first_name: String,\n        last_name: String,\n        email: String,\n        phone: String,\n        password: String,\n        houseNumber: String,\n        street: String,\n        city: String,\n        address_road: String,\n        address_city: String,\n        address_state: String,\n        address_street: String,\n        postalCode: String,\n        state: String,\n        county: String,\n        resetPasswordToken: String,\n        createdAt: String,\n        updatedAt: String\n    }, { timestamps: true });\n\nconst User = mongoose.models.Users || mongoose.model(\"Users\", userSchema);\nexport default User;"],"names":[],"mappings":";;;AAAA;;AAEA,yGAAA,CAAA,UAAQ,CAAC,OAAO,CAAC,GAAG,QAAQ,GAAG,CAAC,SAAS,EAAE;AAC3C,yGAAA,CAAA,UAAQ,CAAC,OAAO,GAAG,OAAO,OAAO;AAEjC,MAAM,aAAa,IAAI,yGAAA,CAAA,SAAM,CACzB;IACI,YAAY;IACZ,WAAW;IACX,OAAO;IACP,OAAO;IACP,UAAU;IACV,aAAa;IACb,QAAQ;IACR,MAAM;IACN,cAAc;IACd,cAAc;IACd,eAAe;IACf,gBAAgB;IAChB,YAAY;IACZ,OAAO;IACP,QAAQ;IACR,oBAAoB;IACpB,WAAW;IACX,WAAW;AACf,GAAG;IAAE,YAAY;AAAK;AAE1B,MAAM,OAAO,yGAAA,CAAA,UAAQ,CAAC,MAAM,CAAC,KAAK,IAAI,yGAAA,CAAA,UAAQ,CAAC,KAAK,CAAC,SAAS;uCAC/C"}},
    {"offset": {"line": 69, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 147, "column": 0}, "map": {"version":3,"sources":["file:///Users/mdreesen/Documents/Programming/projects/goals-io/actions/user.ts"],"sourcesContent":["\"use server\";\nimport { connectDB } from \"@/lib/mongodb\";\nimport User from \"@/(models)/User\";\nimport { getServerSession } from \"next-auth/next\";\n\nexport async function fetchUser() {\n    try {\n        await connectDB();\n        const session = await getServerSession();\n        console.log(session)\n\n        // Find user and farmer with associated emails\n        const user = await User.findOne({ email: session?.user.email });\n\n        return user ?? {}\n    } catch (error) {\n        console.log(error)\n        return error\n    }\n}\n\n"],"names":[],"mappings":";;;;;AACA;AACA;AACA;;;;;;;AAEO,eAAe,uCAAO,GAAP;IAClB,IAAI;QACA,MAAM,CAAA,GAAA,8GAAA,CAAA,YAAS,AAAD;QACd,MAAM,UAAU,MAAM,CAAA,GAAA,6IAAA,CAAA,mBAAgB,AAAD;QACrC,QAAQ,GAAG,CAAC;QAEZ,8CAA8C;QAC9C,MAAM,OAAO,MAAM,kHAAA,CAAA,UAAI,CAAC,OAAO,CAAC;YAAE,OAAO,SAAS,KAAK;QAAM;QAE7D,OAAO,QAAQ,CAAC;IACpB,EAAE,OAAO,OAAO;QACZ,QAAQ,GAAG,CAAC;QACZ,OAAO;IACX;AACJ;;;IAdsB;;AAAA,+OAAA"}},
    {"offset": {"line": 181, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 187, "column": 0}, "map": {"version":3,"sources":["file:///Users/mdreesen/Documents/Programming/projects/goals-io/app/dashboard/layout.tsx"],"sourcesContent":["import Image from \"next/image\";\nimport { Disclosure, DisclosureButton, DisclosurePanel, Menu, MenuButton, MenuItem, MenuItems } from '@headlessui/react'\nimport { Bars3Icon, BellIcon, XMarkIcon, Cog6ToothIcon } from '@heroicons/react/24/outline';\nimport Link from \"next/link\";\nimport { fetchUser } from '@/actions/user';\n\nfunction classNames(...classes: string[]) {\n    return classes.filter(Boolean).join(' ')\n}\n\nexport default async function RootLayout({\n    children,\n}: Readonly<{\n    children: React.ReactNode;\n}>) {\n\n    const useUser = await fetchUser();\n\n    const user = {\n        name: useUser.email,\n    };\n\n    const navigation = [\n        { name: 'Dashboard', href: '/dashboard', current: false },\n        { name: 'Books', href: '/dashboard/books', current: false },\n        { name: 'Nutrition', href: '/dashboard/nutrition', current: false },\n    ]\n    const userNavigation = [\n        { name: 'Your Profile', href: '/groupawesome/profile' },\n        { name: 'Sign out', href: '/' },\n    ]\n\n    return (\n        <div className=\"min-h-full\">\n            <div className=\"bg-gray-900 pb-32\">\n                <Disclosure as=\"nav\" className=\"bg-gray-900\">\n                    <div className=\"mx-auto max-w-7xl sm:px-6 lg:px-8\">\n                        <div className=\"border-b border-gray-700\">\n                            <div className=\"flex h-16 items-center justify-between px-4 sm:px-0\">\n                                <div className=\"flex items-center\">\n                                    <div className=\"shrink-0\">\n                                        <Link href={'/groupawesome/'}>\n                                            <Image\n                                                alt=\"White Raven Logo\"\n                                                width={100}\n                                                height={100}\n                                                src={'/assets/logo.webp'}\n                                                className=\"h-14 w-14 rounded-full object-cover scale-75\"\n                                            />\n                                        </Link>\n                                    </div>\n                                    {navigation.map((item) => (\n                                        <div \n                                            key={item.name}\n                                            className=\"hidden md:block\">\n                                            <div className=\"ml-10 flex items-baseline space-x-4\">\n                                                <a\n                                                    href={item.href}\n                                                    aria-current={item.name ? 'page' : undefined}\n                                                    className={classNames(\n                                                        'text-gray-300 hover:bg-gray-700 hover:text-white rounded-md px-3 py-2 text-sm font-medium',\n                                                    )}\n                                                >\n                                                    {item.name}\n                                                </a>\n                                            </div>\n                                        </div>\n                                    ))}\n                                </div>\n                                <div className=\"hidden md:block\">\n                                    <div className=\"ml-4 flex items-center md:ml-6\">\n                                        <button\n                                            type=\"button\"\n                                            className=\"relative rounded-full bg-gray-900 p-1 text-gray-400 hover:text-white focus:outline-none focus:ring-2 focus:ring-white focus:ring-offset-2 focus:ring-offset-gray-800\"\n                                        >\n                                            <span className=\"absolute -inset-1.5\" />\n                                            <span className=\"sr-only\">View notifications</span>\n                                            <BellIcon aria-hidden=\"true\" className=\"size-6\" />\n                                        </button>\n\n                                        {/* Profile dropdown */}\n                                        <Menu as=\"div\" className=\"relative ml-3\">\n                                            <div>\n                                                <MenuButton className=\"relative flex max-w-xs items-center rounded-full bg-gray-900 text-sm focus:outline-none focus:ring-2 focus:ring-white focus:ring-offset-2 focus:ring-offset-gray-800\">\n                                                    <span className=\"absolute -inset-1.5\" />\n                                                    <span className=\"sr-only\">Open user menu</span>\n                                                    <Cog6ToothIcon aria-hidden=\"true\" className=\"size-6 text-gray-500 \" />\n                                                </MenuButton>\n                                            </div>\n                                            <MenuItems\n                                                transition\n                                                className=\"absolute right-0 z-10 mt-2 w-48 origin-top-right rounded-md bg-white py-1 shadow-lg ring-1 ring-black/5 transition focus:outline-none data-[closed]:scale-95 data-[closed]:transform data-[closed]:opacity-0 data-[enter]:duration-100 data-[leave]:duration-75 data-[enter]:ease-out data-[leave]:ease-in\"\n                                            >\n                                                {userNavigation.map((item) => (\n                                                    <MenuItem key={item.name}>\n                                                        <a\n                                                            href={item.href}\n                                                            className=\"block px-4 py-2 text-sm text-gray-700 data-[focus]:bg-gray-100 data-[focus]:outline-none\"\n                                                        >\n                                                            {item.name}\n                                                        </a>\n                                                    </MenuItem>\n                                                ))}\n                                            </MenuItems>\n                                        </Menu>\n                                    </div>\n                                </div>\n                                <div className=\"-mr-2 flex md:hidden\">\n                                    {/* Mobile menu button */}\n                                    <DisclosureButton className=\"group relative inline-flex items-center justify-center rounded-md bg-gray-900 p-2 text-gray-400 hover:bg-gray-700 hover:text-white focus:outline-none focus:ring-2 focus:ring-white focus:ring-offset-2 focus:ring-offset-gray-800\">\n                                        <span className=\"absolute -inset-0.5\" />\n                                        <span className=\"sr-only\">Open main menu</span>\n                                        <Bars3Icon aria-hidden=\"true\" className=\"block size-6 group-data-[open]:hidden\" />\n                                        <XMarkIcon aria-hidden=\"true\" className=\"hidden size-6 group-data-[open]:block\" />\n                                    </DisclosureButton>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n\n                    <DisclosurePanel className=\"border-b border-gray-700 md:hidden\">\n                        <div className=\"space-y-1 px-2 py-3 sm:px-3\">\n                            {navigation.map((item) => (\n                                <DisclosureButton\n                                    key={item.name}\n                                    as=\"a\"\n                                    href={item.href}\n                                    aria-current={item.name ? 'page' : undefined}\n                                    className={classNames(\n                                        'text-gray-300 hover:bg-gray-700 hover:text-white block rounded-md px-3 py-2 text-base font-medium'\n                                    )}\n                                >\n                                    {item.name}\n                                </DisclosureButton>\n                            ))}\n                        </div>\n                        <div className=\"border-t border-gray-700 pb-3 pt-4\">\n                            <div className=\"flex items-center px-5\">\n                                <div className=\"ml-3\">\n                                    <div className=\"text-base/5 font-medium text-white\">{user.name}</div>\n                                </div>\n                                <button\n                                    type=\"button\"\n                                    className=\"relative ml-auto shrink-0 rounded-full bg-gray-900 p-1 text-gray-400 hover:text-white focus:outline-none focus:ring-2 focus:ring-white focus:ring-offset-2 focus:ring-offset-gray-800\"\n                                >\n                                    <span className=\"absolute -inset-1.5\" />\n                                    <span className=\"sr-only\">View notifications</span>\n                                    <BellIcon aria-hidden=\"true\" className=\"size-6\" />\n                                </button>\n                            </div>\n                            <div className=\"mt-3 space-y-1 px-2\">\n                                {userNavigation.map((item) => (\n                                    <DisclosureButton\n                                        key={item.name}\n                                        as=\"a\"\n                                        href={item.href}\n                                        className=\"block rounded-md px-3 py-2 text-base font-medium text-gray-400 hover:bg-gray-700 hover:text-white\"\n                                    >\n                                        {item.name}\n                                    </DisclosureButton>\n                                ))}\n                            </div>\n                        </div>\n                    </DisclosurePanel>\n                </Disclosure>\n                <header className=\"py-10\">\n                    <div className=\"mx-auto max-w-7xl px-4 sm:px-6 lg:px-8\">\n                        <h1 className=\"text-3xl font-bold tracking-tight text-white\">Dashboard</h1>\n                        <p className=\"text-xl font-bold tracking-tight text-white\">{useUser.email}</p>\n                    </div>\n                </header>\n            </div>\n\n            <main className=\"-mt-32\">\n                <div className=\"mx-auto max-w-7xl px-4 pb-12 sm:px-6 lg:px-8\">\n                    <div className=\"rounded-lg bg-white px-5 py-6 shadow sm:px-6\">\n                        {children}\n                    </div>\n                </div>\n            </main>\n        </div>\n    )\n}"],"names":[],"mappings":"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"}},
    {"offset": {"line": 681, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}