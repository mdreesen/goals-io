{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/mdreesen/Documents/Programming/projects/goals-io/app/authentication/signup/page.tsx/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/app/authentication/signup/page.tsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/app/authentication/signup/page.tsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAsS,GACnU,oEACA"}},
    {"offset": {"line": 15, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 21, "column": 0}, "map": {"version":3,"sources":["file:///Users/mdreesen/Documents/Programming/projects/goals-io/app/authentication/signup/page.tsx/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/app/authentication/signup/page.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/app/authentication/signup/page.tsx\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAkR,GAC/S,gDACA"}},
    {"offset": {"line": 29, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 35, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 39, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 59, "column": 0}, "map": {"version":3,"sources":["file:///Users/mdreesen/Documents/Programming/projects/goals-io/lib/mongodb.ts"],"sourcesContent":["import mongoose from \"mongoose\";\nconst { MONGO_URI } = process.env;\nexport const connectDB = async () => {\n  try {\n    const { connection } = await mongoose.connect(MONGO_URI as string);\n    if (connection.readyState === 1) {\n      return Promise.resolve(true);\n    }\n  } catch (error) {\n    console.error(error);\n    return Promise.reject(error);\n  }\n};"],"names":[],"mappings":";;;AAAA;;AACA,MAAM,EAAE,SAAS,EAAE,GAAG,QAAQ,GAAG;AAC1B,MAAM,YAAY;IACvB,IAAI;QACF,MAAM,EAAE,UAAU,EAAE,GAAG,MAAM,yGAAA,CAAA,UAAQ,CAAC,OAAO,CAAC;QAC9C,IAAI,WAAW,UAAU,KAAK,GAAG;YAC/B,OAAO,QAAQ,OAAO,CAAC;QACzB;IACF,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC;QACd,OAAO,QAAQ,MAAM,CAAC;IACxB;AACF"}},
    {"offset": {"line": 76, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 82, "column": 0}, "map": {"version":3,"sources":["file:///Users/mdreesen/Documents/Programming/projects/goals-io/%28models%29/User.ts"],"sourcesContent":["import mongoose, { Schema } from \"mongoose\";\n\nmongoose.connect(`${process.env.MONGO_URI}`);\nmongoose.Promise = global.Promise;\n\nconst userSchema = new Schema(\n    {\n        first_name: String,\n        last_name: String,\n        email: String,\n        phone: String,\n        password: String,\n        houseNumber: String,\n        street: String,\n        city: String,\n        address_road: String,\n        address_city: String,\n        address_state: String,\n        address_street: String,\n        postalCode: String,\n        state: String,\n        county: String,\n        resetPasswordToken: String,\n        createdAt: String,\n        updatedAt: String\n    }, { timestamps: true });\n\nconst User = mongoose.models.Users || mongoose.model(\"Users\", userSchema);\nexport default User;"],"names":[],"mappings":";;;AAAA;;AAEA,yGAAA,CAAA,UAAQ,CAAC,OAAO,CAAC,GAAG,QAAQ,GAAG,CAAC,SAAS,EAAE;AAC3C,yGAAA,CAAA,UAAQ,CAAC,OAAO,GAAG,OAAO,OAAO;AAEjC,MAAM,aAAa,IAAI,yGAAA,CAAA,SAAM,CACzB;IACI,YAAY;IACZ,WAAW;IACX,OAAO;IACP,OAAO;IACP,UAAU;IACV,aAAa;IACb,QAAQ;IACR,MAAM;IACN,cAAc;IACd,cAAc;IACd,eAAe;IACf,gBAAgB;IAChB,YAAY;IACZ,OAAO;IACP,QAAQ;IACR,oBAAoB;IACpB,WAAW;IACX,WAAW;AACf,GAAG;IAAE,YAAY;AAAK;AAE1B,MAAM,OAAO,yGAAA,CAAA,UAAQ,CAAC,MAAM,CAAC,KAAK,IAAI,yGAAA,CAAA,UAAQ,CAAC,KAAK,CAAC,SAAS;uCAC/C"}},
    {"offset": {"line": 113, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 127, "column": 0}, "map": {"version":3,"sources":["file:///Users/mdreesen/Documents/Programming/projects/goals-io/actions/register.ts"],"sourcesContent":["\"use server\"\nimport { connectDB } from \"@/lib/mongodb\";\nimport User from \"@/(models)/User\";\nimport bcrypt from \"bcryptjs\";\n\nexport const register = async (values: any) => {\n    const { email, password, confirm_password } = values;\n    try {\n        await connectDB();\n        const userFound = await User.findOne({ email });\n        if (confirm_password !== password) {\n            return {\n                error: 'Passwords do not match'\n            }\n        }\n        if (userFound) {\n            return {\n                error: 'Email already exists!'\n            }\n        }\n        const hashedPassword = await bcrypt.hash(password, 10);\n        const user = new User({\n            email,\n            password: hashedPassword,\n        });\n\n        const savedUser = await user.save();\n\n    } catch (e) {\n        console.log(e);\n    }\n}"],"names":[],"mappings":";;;;;AACA;AACA;AACA;;;;;;;AAEO,MAAM,uCAAM,GAAN,WAAW,OAAO;IAC3B,MAAM,EAAE,KAAK,EAAE,QAAQ,EAAE,gBAAgB,EAAE,GAAG;IAC9C,IAAI;QACA,MAAM,CAAA,GAAA,8GAAA,CAAA,YAAS,AAAD;QACd,MAAM,YAAY,MAAM,kHAAA,CAAA,UAAI,CAAC,OAAO,CAAC;YAAE;QAAM;QAC7C,IAAI,qBAAqB,UAAU;YAC/B,OAAO;gBACH,OAAO;YACX;QACJ;QACA,IAAI,WAAW;YACX,OAAO;gBACH,OAAO;YACX;QACJ;QACA,MAAM,iBAAiB,MAAM,iIAAA,CAAA,UAAM,CAAC,IAAI,CAAC,UAAU;QACnD,MAAM,OAAO,IAAI,kHAAA,CAAA,UAAI,CAAC;YAClB;YACA,UAAU;QACd;QAEA,MAAM,YAAY,MAAM,KAAK,IAAI;IAErC,EAAE,OAAO,GAAG;QACR,QAAQ,GAAG,CAAC;IAChB;AACJ;;;IA1Ba;;AAAA,+OAAA"}},
    {"offset": {"line": 173, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 179, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 181, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}